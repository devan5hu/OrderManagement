plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot Starter for Web (for REST API and controllers)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot DevTools for development tools like hot reloading (optional)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Boot Docker Compose support (optional, for containerization)
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // JPA API dependency (if needed in your project)
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Spring Boot Starter for JPA (relational database support)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    runtimeOnly 'com.mysql:mysql-connector-j:8.2.0'

    // MySQL Connector (optional if you intend to use MySQL as a secondary database)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-web'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
}
